#include <stdio.h>
#include <stdlib.h>
#include <math.h>

int *find_maxcrossing_subarray(int* A, int low, int mid, int high) {
    int left_sum=-100; int right_sum=-100;
    int sum=0;
    int i, j, max_left, max_right;
    for (i=mid; i>low; i--) {
        sum=sum+A[i];
        if (sum>left_sum) {
            left_sum=sum;
            max_left=i;
        }
    }
    for (j=mid+1; j<high; j++) {
        sum=sum+A[j];
        if (sum>right_sum) {
            right_sum=sum;
            max_right=j;
        }
    }
    int *ret=malloc(sizeof(int)*3);
    ret[0]=max_left; ret[1]=max_right; ret[2]=left_sum+right_sum;
    return ret;
}

/*int *find_max_subarray(int *A, int low, int high) {
    int v[3];
    if (low==high){
        v[0]=low; v[1]=high; v[2]=A[low];
        return v;
    }
    else {
        mid=(low+high)/2;

    }*/

int main() {
    int A[]={5,-1,-4,10,4,2,-3,-7,-2, 1};
    int *v=find_maxcrossing_subarray(A,0,4,9);
     printf("max left: %d",v[0]);
      printf("max right: %d",v[1]);
       printf("soma: %d",v[2]);



}
